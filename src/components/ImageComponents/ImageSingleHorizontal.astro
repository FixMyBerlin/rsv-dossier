---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

type Props = {
  src: string
  alt: string
  caption: string
  imageConfig: {
    discriminant: '3/2' | '4/3' | '9/4' | 'pano'
    value: {
      discriminant: 'half' | 'full'
      value: 'center' | 'right' | 'left'
    }
  }
}
const { src, alt, caption, imageConfig } = Astro.props
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/**/*.{jpeg,jpg,png,gif,webp,JPG,JPEG,PNG,GIF}',
)
if (!images[src]) {
  console.error(`"${src}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`)
  // throw new Error(`"${src}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`)
}

const ratio = imageConfig.discriminant
const width = imageConfig.value?.discriminant
const position = imageConfig.value?.value
---

<div
  class:list={[
    position === 'center' && 'justify-center',
    position === 'right' && 'justify-end',
    'my-8 flex w-full',
  ]}
>
  <figure class:list={[width === 'half' ? 'w-full md:w-1/2' : 'w-full', 'not-prose']}>
    <div
      class:list={[
        ratio === '3/2' && 'aspect-[3/2]',
        ratio === '4/3' && 'aspect-[4/3]',
        ratio === '9/4' && 'aspect-[9/4]',
        ratio === 'pano' && 'aspect-[16/9]',
      ]}
    >
      <!-- quality="high" -->
      <!-- https://docs.astro.build/en/guides/images/#quality -->
      {
        images[src] && (
          <Image
            class="h-full w-full overflow-hidden object-cover"
            src={images[src]()}
            alt={alt || ''}
            loading="lazy"
          />
        )
      }
    </div>
    <figcaption class="mt-2 text-xs text-gray-500 md:text-sm">{caption}</figcaption>
  </figure>
</div>
