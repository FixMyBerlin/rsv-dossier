---
import Divider from '@components/Divider.astro'
import ImageDouble from '@components/ImageComponents/ImageDouble.astro'
import ImageSingleHorizontal from '@components/ImageComponents/ImageSingleHorizontal.astro'
import ImageSingleSquare from '@components/ImageComponents/ImageSingleSquare.astro'
import ImageSingleVertical from '@components/ImageComponents/ImageSingleVertical.astro'
import PageHeader from '@components/PageHeader.astro'
import ProseMarkdown from '@components/ProseMarkdown.astro'
import Section from '@components/Section.astro'
import { H4 } from '@components/Text'
import { buttonStylesForWhiteLinkElement } from '@components/links/styles'
import { ArrowUpRightIcon } from '@heroicons/react/20/solid'
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
import LayoutPage from 'src/layouts/LayoutPage.astro'

export async function getStaticPaths() {
  const communicationposts = await getCollection('communicationposts')
  return communicationposts.map((entry) => {
    const entrySlug = entry.data.preview ? entry.slug + '--preview' : entry.slug
    return { params: { slug: entrySlug }, props: { entry } }
  })
}

const { entry } = Astro.props
const { title, subTitle, type, date, preview, teaserImage, imageCopyright, uploads } = entry.data

const { Content } = await entry.render()
---

<LayoutPage title={`${type}: ${title}`} noindex={preview}>
  <Section>
    <small class="text-slate-500"
      >{
        new Date(date).toLocaleDateString('de-DE', {
          weekday: 'long',
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })
      }</small
    >
    <PageHeader title={title} subTitle={subTitle} />
    <Divider />
    <figure class="mb-16 h-[566px] w-full">
      <Image
        class="h-full w-full overflow-hidden object-cover"
        src={teaserImage}
        quality="high"
        alt=""
        loading="lazy"
      />
      {
        imageCopyright && (
          <figcaption class="mr-6 mt-1 text-right text-xs text-gray-400 md:text-sm">
            Â© {imageCopyright}
          </figcaption>
        )
      }
    </figure>
    <ProseMarkdown>
      <Content
        components={{
          ImageSingleHorizontal,
          ImageSingleSquare,
          ImageSingleVertical,
          ImageDouble,
        }}
      />
    </ProseMarkdown>
    {
      !!uploads?.length && (
        <div class="mt-10">
          <H4 className="mb-4">Dateien</H4>
          <ul>
            {uploads.map((file) => (
              <li>
                <a
                  href={file.file}
                  class:list={buttonStylesForWhiteLinkElement}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <ArrowUpRightIcon className="mr-2 h-6 w-6 pt-0.5" />
                  {file.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </Section>
</LayoutPage>
